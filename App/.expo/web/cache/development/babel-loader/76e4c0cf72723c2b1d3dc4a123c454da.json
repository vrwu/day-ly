{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/wesle/Desktop/ProjectDayLy/day.ly-Priv/App/screens/home_page.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function HomePage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    name: \"math\",\n    starTime: \"3pm\",\n    time: 2,\n    sessName: \"Pomodorox2\",\n    key: 1\n  }, {\n    name: \"bio\",\n    starTime: \"3pm\",\n    time: 2,\n    sessName: \"Pomodorox2\",\n    key: 2\n  }, {\n    name: \"paper\",\n    starTime: \"4pm\",\n    time: 2,\n    sessName: \"Day-ly grind\",\n    key: 3\n  }, {\n    name: \"exam\",\n    starTime: \"5pm\",\n    time: 2,\n    sessName: \"52-17\",\n    key: 4\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sess = _useState2[0],\n      setSess = _useState2[1];\n\n  var handleEdit = function handleEdit(item) {\n    Alert.alert(\"Do you want to remove \", item.name, [{\n      text: \"No\",\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        return handleRemove(item.key);\n      }\n    }]);\n  };\n\n  var handleRemove = function handleRemove(key) {\n    setSess(function (prevSess) {\n      return prevSess.filter(function (ses) {\n        return ses.key != key;\n      });\n    });\n  };\n\n  var handleTimer = function handleTimer(item) {\n    navigation.navigate('TimerPage');\n  };\n\n  if (sess.length == 0) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Welcome, Theodore\"), React.createElement(Text, {\n      style: styles.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \" Here are your day.ly tasks :)\"), React.createElement(Text, {\n      style: (fontSize = 20, textAlign = 'center'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"It looks like you dont have any sessions today :(\"));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Welcome, Theodore\"), React.createElement(Text, {\n      style: styles.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \" Here are your day.ly tasks :)\"), React.createElement(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.key.toString();\n      },\n      data: sess,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return handleEdit(item);\n          },\n          onPress: function onPress() {\n            return handleTimer(item);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.ItemContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }\n        }, item.name + \" - \" + item.starTime)));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f1e9db',\n    paddingHorizontal: 20,\n    paddingTop: 50\n  },\n  heading: {\n    fontSize: 40,\n    textAlign: 'center'\n  },\n  subHeading: {\n    fontSize: 25,\n    textAlign: 'center',\n    paddingBottom: 40\n  },\n  scrollView: {\n    marginHorizontal: 20,\n    marginVertical: 50\n  },\n  item: {\n    fontSize: 24\n  },\n  ItemContainer: {\n    borderWidth: 1,\n    marginTop: 25,\n    padding: 30,\n    borderRadius: 30,\n    backgroundColor: '#6200ee',\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["/mnt/c/Users/wesle/Desktop/ProjectDayLy/day.ly-Priv/App/screens/home_page.js"],"names":["StatusBar","React","useState","HomePage","navigation","name","starTime","time","sessName","key","sess","setSess","handleEdit","item","Alert","alert","text","style","onPress","handleRemove","prevSess","filter","ses","handleTimer","navigate","length","styles","container","heading","subHeading","fontSize","textAlign","toString","ItemContainer","StyleSheet","create","flex","backgroundColor","paddingHorizontal","paddingTop","paddingBottom","scrollView","marginHorizontal","marginVertical","borderWidth","marginTop","padding","borderRadius","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Button, Alert, SafeAreaView, ScrollView, FlatList, TouchableHighlight, TouchableOpacity} from 'react-native';\r\n\r\nexport default function HomePage({navigation}) {\r\n\r\n    //temp place holder for data\r\n    //startTime should an int, so its easier to use with an clock/time api idk\r\n    //I just left it as a string so we can output am/pm \r\n    const [sess, setSess] = useState([\r\n      {name: \"math\", starTime: \"3pm\", time: 2, sessName: \"Pomodorox2\", key: 1},\r\n      {name: \"bio\", starTime: \"3pm\", time: 2, sessName: \"Pomodorox2\", key: 2},\r\n      {name: \"paper\", starTime: \"4pm\", time: 2, sessName: \"Day-ly grind\", key: 3},  \r\n      {name: \"exam\", starTime: \"5pm\", time: 2, sessName: \"52-17\", key: 4},\r\n    ]);\r\n    //Function handles\r\n    const handleEdit = (item) => {\r\n      Alert.alert(\r\n        \"Do you want to remove \", \r\n        item.name,\r\n        [\r\n          { \r\n            text: \"No\",\r\n            style: \"cancel\"\r\n          },\r\n          {\r\n            text: \"Yes\",\r\n            onPress: () => handleRemove(item.key),\r\n          },\r\n          \r\n        ]\r\n      )\r\n    };\r\n    const handleRemove = (key) => {\r\n      setSess((prevSess) => {\r\n        return prevSess.filter(ses => ses.key != key)\r\n      })\r\n    };\r\n    const handleTimer = (item) => {\r\n      navigation.navigate('TimerPage')\r\n    };\r\n\r\n\r\n    //Case for empty list of sessions \r\n    if (sess.length == 0){\r\n      return (\r\n        <View style={styles.container}>\r\n          <Text style={styles.heading}> \r\n              Welcome, Theodore\r\n          </Text>\r\n          <Text style ={styles.subHeading}> Here are your day.ly tasks :)</Text>\r\n        <Text style = {fontSize = 20, textAlign='center'}>It looks like you dont have any sessions today :(</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <View style={styles.container}>\r\n          <Text style={styles.heading}> \r\n              Welcome, Theodore\r\n          </Text>\r\n          <Text style ={styles.subHeading}> Here are your day.ly tasks :)</Text>\r\n    \r\n          {/* List of Sessions*/}\r\n          <FlatList\r\n            keyExtractor={item => item.key.toString()}\r\n            data={sess}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity onLongPress={() => handleEdit(item)} onPress={() => handleTimer(item)}>\r\n                <View style={styles.ItemContainer}>\r\n                  <Text style={styles.item}>{item.name + \" - \" + item.starTime}</Text>\r\n\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n        );\r\n    }\r\n}\r\n    \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f1e9db',\r\n    paddingHorizontal: 20,\r\n    paddingTop: 50,\r\n  },\r\n  heading: {\r\n    fontSize: 40,\r\n    textAlign: 'center',\r\n\r\n  },\r\n  subHeading: {\r\n    fontSize: 25,\r\n    textAlign: 'center',\r\n    paddingBottom: 40,\r\n    \r\n  },\r\n  scrollView:{\r\n    marginHorizontal: 20,\r\n    marginVertical: 50,\r\n  },\r\n  item: {\r\n\r\n    fontSize: 24,\r\n\r\n  },\r\n\r\n  ItemContainer: {\r\n    borderWidth: 1,\r\n    marginTop: 25,\r\n    padding: 30,\r\n    borderRadius:30,\r\n    backgroundColor: '#6200ee',\r\n    // fontSize: 24,\r\n    color: \"black\",\r\n  },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}