{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\sdhacks\\\\day.ly-Priv\\\\App\\\\screens\\\\enter_name.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, TextInput, Button } from 'react-native-paper';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Font from 'expo-font';\n\nvar EnterName = function (_Component) {\n  _inherits(EnterName, _Component);\n\n  var _super = _createSuper(EnterName);\n\n  function EnterName() {\n    var _this;\n\n    _classCallCheck(this, EnterName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: '',\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(EnterName, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'OpenSansRegular': {\n                  uri: require(\"../assets/fonts/OpenSans-Regular.ttf\")\n                },\n                'ProximaNovaRegular': {\n                  uri: require(\"../assets/fonts/ProximaNova-Regular.otf\")\n                }\n              }));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.fontsLoaded) {\n        return React.createElement(LinearGradient, {\n          colors: ['#00c6ff', '#0072ff'],\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.3\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }), React.createElement(View, {\n          style: {\n            flex: 0.5,\n            padding: \"15%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            fontFamily: \"ProximaNovaRegular\",\n            color: \"#ffffff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, \" What can we call you? \", \"\\n\"), React.createElement(TextInput, {\n          style: {\n            backgroundColor: \"transparent\",\n            height: 60,\n            color: 'white'\n          },\n          theme: {\n            colors: {\n              primary: '#ffffff'\n            }\n          },\n          mode: \"flat\",\n          label: \"Name\",\n          value: this.state.text,\n          selectionColor: \"white\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              text: text\n            });\n          },\n          placeholder: \"e.g John\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }), React.createElement(View, {\n          style: {\n            flex: 0.1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }), React.createElement(LinearGradient, {\n          colors: ['#e43a15', '#e65245'],\n          style: {\n            width: \"30%\",\n            marginLeft: \"70%\",\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, React.createElement(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('HomePage');\n          },\n          style: {\n            backgroundColor: '#c21f1f',\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        }, \"Next\"))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return EnterName;\n}(Component);\n\nexport { EnterName as default };","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/sdhacks/day.ly-Priv/App/screens/enter_name.js"],"names":["StatusBar","React","Component","useState","Text","TextInput","Button","LinearGradient","Font","EnterName","state","text","fontsLoaded","loadAsync","uri","require","setState","loadFonts","flex","padding","fontSize","fontFamily","color","backgroundColor","height","colors","primary","width","marginLeft","borderRadius","props","navigation","navigate"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport {StyleSheet, View,  } from 'react-native';\r\nimport {Text, TextInput, Button} from 'react-native-paper';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n// import { Fonts } from 'expo-font';\r\nimport * as Font from 'expo-font';\r\n\r\nexport default class EnterName extends Component {\r\n\r\n    state = {\r\n        text: '',\r\n        fontsLoaded: false,\r\n    };\r\n    async loadFonts() {\r\n        await Font.loadAsync({\r\n            'OpenSansRegular': {\r\n            uri: require('../assets/fonts/OpenSans-Regular.ttf'),\r\n            },\r\n            'ProximaNovaRegular': {\r\n                uri: require('../assets/fonts/ProximaNova-Regular.otf'),\r\n                },\r\n    });\r\n    this.setState({ fontsLoaded: true });\r\n}\r\n    // componentDidMount() {\r\n    //     Font.loadAsync({\r\n    //       'open-sans-bold': require('../assets/fonts/OpenSans-Bold.ttf'),\r\n    //     });\r\n    //     this.setState({ fontsLoaded: true });\r\n    //   }\r\n\r\n      componentDidMount() {\r\n          this.loadFonts();\r\n      }\r\n\r\n\r\n    render() {\r\n        if(this.state.fontsLoaded) {\r\n            return (\r\n                <LinearGradient colors={['#00c6ff', '#0072ff']} style={{flex: 1}}>\r\n                    <View style={{flex:0.3}}>\r\n                    </View>\r\n                    <View style={{ flex: 0.5, padding: \"15%\"}}>\r\n                    <Text style={{fontSize: 25, fontFamily: \"ProximaNovaRegular\", color: \"#ffffff\"}}> What can we call you? {\"\\n\"}</Text>\r\n                    <TextInput style={{backgroundColor: \"transparent\",height: 60, color: 'white'}} theme={{ colors: { primary: '#ffffff'}}}\r\n                    mode = \"flat\" label=\"Name\" value={this.state.text} selectionColor='white'\r\n                    onChangeText={text => this.setState({text})} placeholder=\"e.g John\"/>\r\n                    <View style={{flex: 0.1}}></View>\r\n                    <LinearGradient colors={['#e43a15', '#e65245']} style={{width: \"30%\", marginLeft: \"70%\", borderRadius: 10}}>\r\n                    <Button mode=\"contained\" onPress={() => this.props.navigation.navigate('HomePage')} style={{backgroundColor: '#c21f1f', borderRadius: 10}}>\r\n                        Next\r\n                    </Button></LinearGradient>\r\n                    </View>\r\n                </LinearGradient>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}