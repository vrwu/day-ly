{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\sdhacks\\\\day.ly-Priv\\\\App\\\\node_modules\\\\react-native-paper-dropdown\\\\dist\\\\DropDown.js\";\n\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Menu, TextInput, TouchableRipple, useTheme } from \"react-native-paper\";\nimport React, { forwardRef, useEffect, useState } from \"react\";\nvar DropDown = forwardRef(function (props, ref) {\n  var activeTheme = useTheme();\n  var visible = props.visible,\n      onDismiss = props.onDismiss,\n      showDropDown = props.showDropDown,\n      value = props.value,\n      setValue = props.setValue,\n      activeColor = props.activeColor,\n      mode = props.mode,\n      label = props.label,\n      placeholder = props.placeholder,\n      inputProps = props.inputProps,\n      list = props.list,\n      dropDownContainerMaxHeight = props.dropDownContainerMaxHeight,\n      theme = props.theme;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayValue = _useState2[0],\n      setDisplayValue = _useState2[1];\n\n  var _useState3 = useState({\n    height: 0,\n    width: 0,\n    x: 0,\n    y: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputLayout = _useState4[0],\n      setInputLayout = _useState4[1];\n\n  var onLayout = function onLayout(event) {\n    setInputLayout(event.nativeEvent.layout);\n  };\n\n  useEffect(function () {\n    var _list$find;\n\n    var _label = (_list$find = list.find(function (_) {\n      return _.value === value;\n    })) == null ? void 0 : _list$find.label;\n\n    if (_label) {\n      setDisplayValue(_label);\n    }\n  }, [list, value]);\n  return React.createElement(Menu, {\n    visible: visible,\n    onDismiss: onDismiss,\n    theme: theme,\n    anchor: React.createElement(TouchableRipple, {\n      ref: ref,\n      onPress: showDropDown,\n      onLayout: onLayout,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 81\n      }\n    }, React.createElement(View, {\n      pointerEvents: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, _extends({\n      value: displayValue,\n      mode: mode,\n      label: label,\n      placeholder: placeholder,\n      pointerEvents: \"none\",\n      theme: theme\n    }, inputProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    })))),\n    style: {\n      maxWidth: inputLayout == null ? void 0 : inputLayout.width,\n      width: inputLayout == null ? void 0 : inputLayout.width,\n      marginTop: inputLayout == null ? void 0 : inputLayout.height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      maxHeight: dropDownContainerMaxHeight || 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, list.map(function (_item, _index) {\n    return React.createElement(Menu.Item, {\n      key: _index,\n      theme: theme,\n      titleStyle: {\n        color: value === _item.value ? activeColor || (theme || activeTheme).colors.primary : undefined\n      },\n      onPress: function onPress() {\n        setValue(_item.value);\n\n        if (onDismiss) {\n          onDismiss();\n        }\n      },\n      title: _item.custom || _item.label,\n      style: {\n        width: inputLayout == null ? void 0 : inputLayout.width\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 41\n      }\n    });\n  })));\n});\nexport default DropDown;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/sdhacks/day.ly-Priv/App/node_modules/react-native-paper-dropdown/dist/DropDown.js"],"names":["Menu","TextInput","TouchableRipple","useTheme","React","forwardRef","useEffect","useState","DropDown","props","ref","activeTheme","visible","onDismiss","showDropDown","value","setValue","activeColor","mode","label","placeholder","inputProps","list","dropDownContainerMaxHeight","theme","displayValue","setDisplayValue","height","width","x","y","inputLayout","setInputLayout","onLayout","event","nativeEvent","layout","_label","find","_","maxWidth","marginTop","maxHeight","map","_item","_index","color","colors","primary","undefined","custom"],"mappings":"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","sourcesContent":["import { ScrollView, View, } from \"react-native\";\r\nimport { Menu, TextInput, TouchableRipple, useTheme } from \"react-native-paper\";\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nconst DropDown = forwardRef((props, ref) => {\r\n    const activeTheme = useTheme();\r\n    const { visible, onDismiss, showDropDown, value, setValue, activeColor, mode, label, placeholder, inputProps, list, dropDownContainerMaxHeight, theme, } = props;\r\n    const [displayValue, setDisplayValue] = useState(\"\");\r\n    const [inputLayout, setInputLayout] = useState({\r\n        height: 0,\r\n        width: 0,\r\n        x: 0,\r\n        y: 0,\r\n    });\r\n    const onLayout = (event) => {\r\n        setInputLayout(event.nativeEvent.layout);\r\n    };\r\n    useEffect(() => {\r\n        const _label = list.find((_) => _.value === value)?.label;\r\n        if (_label) {\r\n            setDisplayValue(_label);\r\n        }\r\n    }, [list, value]);\r\n    return (<Menu visible={visible} onDismiss={onDismiss} theme={theme} anchor={<TouchableRipple ref={ref} onPress={showDropDown} onLayout={onLayout}>\r\n            <View pointerEvents={\"none\"}>\r\n              <TextInput value={displayValue} mode={mode} label={label} placeholder={placeholder} pointerEvents={\"none\"} theme={theme} {...inputProps}/>\r\n            </View>\r\n          </TouchableRipple>} style={{\r\n        maxWidth: inputLayout?.width,\r\n        width: inputLayout?.width,\r\n        marginTop: inputLayout?.height,\r\n    }}>\r\n        <ScrollView style={{ maxHeight: dropDownContainerMaxHeight || 200 }}>\r\n          {list.map((_item, _index) => (<Menu.Item key={_index} theme={theme} titleStyle={{\r\n        color: value === _item.value\r\n            ? activeColor || (theme || activeTheme).colors.primary\r\n            : undefined,\r\n    }} onPress={() => {\r\n        setValue(_item.value);\r\n        if (onDismiss) {\r\n            onDismiss();\r\n        }\r\n    }} title={_item.custom || _item.label} style={{ width: inputLayout?.width }}/>))}\r\n        </ScrollView>\r\n      </Menu>);\r\n});\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}