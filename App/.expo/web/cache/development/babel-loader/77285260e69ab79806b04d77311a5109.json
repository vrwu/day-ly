{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\sdhacks\\\\day.ly-Priv\\\\App\\\\screens\\\\creation.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport DropDown from 'react-native-paper-dropdown';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Provider as PaperProvider, Appbar, Text, BottomNavigation, TextInput, Button, HelperText } from 'react-native-paper';\nimport { useFonts } from 'expo-font';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { addSess } from \"../actions/action\";\nimport { useDispatch } from 'react-redux';\nstate = {\n  fontsLoaded: false\n};\n\nvar CreationScreen = function CreationScreen(_ref) {\n  var navigation = _ref.navigation;\n  var cycle = [0, 0];\n  var numCycles = 0;\n  var totalDuration = 0;\n  var dispatch = useDispatch();\n\n  var submitSess = function submitSess(sess) {\n    return dispatch(addSess(sess));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    submitSess({\n      name: text,\n      starTime: text5,\n      time: totalDuration,\n      cycle: numCycles,\n      lenWork: cycle[0],\n      lenRest: cycle[1],\n      day: text6\n    });\n    navigation.navigate(\"HomePage\");\n  };\n\n  var issue = false;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      text2 = _React$useState4[0],\n      setText2 = _React$useState4[1];\n\n  var onChangeText2 = function onChangeText2(text2) {\n    return setText2(text2);\n  };\n\n  var onChangeText3 = function onChangeText3(text3) {\n    return setText3(text3);\n  };\n\n  var onChangeText4 = function onChangeText4(text4) {\n    return setText4(text4);\n  };\n\n  var onChangeText5 = function onChangeText5(text5) {\n    return setText5(text5);\n  };\n\n  var onChangeText6 = function onChangeText6(text6) {\n    return setText6(text6);\n  };\n\n  var hasTimeErrors = function hasTimeErrors(textt) {\n    if (textt == \"\" || textt.includes(\":\") && (textt.includes(\"AM\") || textt.includes(\"PM\") || textt.includes(\"pm\") || textt.includes(\"am\"))) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var hasErrors = function hasErrors(textt) {\n    if (Number(textt) || textt == \"\" || Number(textt) == 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      text3 = _React$useState6[0],\n      setText3 = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      text4 = _React$useState8[0],\n      setText4 = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      text5 = _React$useState10[0],\n      setText5 = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      text6 = _React$useState12[0],\n      setText6 = _React$useState12[1];\n\n  var MusicRoute = function MusicRoute() {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 30\n      }\n    });\n  };\n\n  var AlbumsRoute = function AlbumsRoute() {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }\n    });\n  };\n\n  var RecentsRoute = function RecentsRoute() {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 32\n      }\n    });\n  };\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      index = _React$useState14[0],\n      setIndex = _React$useState14[1];\n\n  var _React$useState15 = React.useState([{\n    key: 'music',\n    title: 'Music',\n    icon: 'queue-music'\n  }, {\n    key: 'albums',\n    title: 'Albums',\n    icon: 'album'\n  }, {\n    key: 'recents',\n    title: 'Recents',\n    icon: 'history'\n  }]),\n      _React$useState16 = _slicedToArray(_React$useState15, 1),\n      routes = _React$useState16[0];\n\n  var renderScene = BottomNavigation.SceneMap({\n    music: MusicRoute,\n    albums: AlbumsRoute,\n    recents: RecentsRoute\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDropDown = _useState2[0],\n      setShowDropDown = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gender = _useState4[0],\n      setGender = _useState4[1];\n\n  var genderList = [{\n    label: '25 Minute Work : 5 Minute Break',\n    value: \"Pomodoro\"\n  }, {\n    label: '52 Minute Work : 17 Minute Break',\n    value: \"52/17\"\n  }, {\n    label: '90 Minute Work : 30 Minute Break',\n    value: \"PomoX\"\n  }, {\n    label: 'Custom',\n    value: 'Custom'\n  }];\n\n  var _useFonts = useFonts({\n    'OpenSansSemiBold': require(\"../assets/fonts/OpenSans-SemiBold.ttf\"),\n    'OpenSansRegular': require(\"../assets/fonts/OpenSans-Regular.ttf\"),\n    'OpenSansBold': require(\"../assets/fonts/OpenSans-Bold.ttf\"),\n    'ProximaNovaRegular': require(\"../assets/fonts/ProximaNova-Regular.otf\"),\n    'ProximaNovaBold': require(\"../assets/fonts/ProximaNova-Bold.otf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (gender == \"Pomodoro\") {\n    cycle = [25, 5];\n  } else if (gender == \"52/17\") {\n    cycle = [52, 17];\n  } else if (gender == \"PomoX\") {\n    cycle = [90, 30];\n  } else {\n    cycle = [Number(text3), Number(text4)];\n  }\n\n  numCycles = Number(text2);\n  totalDuration = numCycles * (cycle[0] + cycle[1]);\n\n  if (gender == \"Custom\") {\n    if (!fontsLoaded) {\n      return null;\n    }\n\n    return React.createElement(PaperProvider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, React.createElement(LinearGradient, {\n      colors: ['#00c6ff', '#0072ff'],\n      style: styles.compress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      style: {\n        height: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.heading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"create a study session\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, \"Subject:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"What will you be doing?\",\n      value: text,\n      onChangeText: function onChangeText(text) {\n        setText(text);\n        console.log(text);\n      },\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"Math Homework\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"Start Time:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"What time will you start?\",\n      value: text5,\n      onChangeText: onChangeText5,\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"3:00 pm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }), React.createElement(HelperText, {\n      type: \"error\",\n      visible: hasTimeErrors(text5),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, \"Incorrect time format!\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, \"Work and Break Cycle\")), React.createElement(View, {\n      style: {\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, React.createElement(DropDown, {\n      label: 'Working Minutes : Resting Minutes',\n      mode: 'flat',\n      theme: {\n        colors: {\n          primary: 'black'\n        }\n      },\n      value: gender,\n      setValue: setGender,\n      list: genderList,\n      visible: showDropDown,\n      showDropDown: function showDropDown() {\n        return setShowDropDown(true);\n      },\n      onDismiss: function onDismiss() {\n        setShowDropDown(false);\n      },\n      inputProps: {\n        right: React.createElement(TextInput.Icon, {\n          name: 'menu-down',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 36\n          }\n        })\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, \"Working Cycle:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"How many minutes will one work cycle be?\",\n      value: text3,\n      onChangeText: onChangeText3,\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"90\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }), React.createElement(HelperText, {\n      type: \"error\",\n      visible: hasErrors(text3),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, \"Only input numbers!\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, \"Resting Cycle:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"How many minutes will one rest cycle be?\",\n      value: text4,\n      onChangeText: onChangeText4,\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"90\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }), React.createElement(HelperText, {\n      type: \"error\",\n      visible: hasErrors(text4),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, \"Only input numbers!\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, \"Number of Cycles:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"How many cycles do you want to complete?\",\n      value: text2,\n      onChangeText: onChangeText2,\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }), React.createElement(HelperText, {\n      type: \"error\",\n      visible: hasErrors(text2),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }, \"Only input numbers!\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, \"Repeating Days\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"Which days of the week do you want to repeat this study session?\",\n      value: text6,\n      onChangeText: function onChangeText(text6) {\n        setText6(text6);\n      },\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"'None' or 'monday tuesday friday'\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        height: 25\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return handleSubmit();\n      },\n      style: {\n        width: \"90%\",\n        backgroundColor: '#c21f1f',\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.textations,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 29\n      }\n    }, \"Submit\"))), React.createElement(View, {\n      style: {\n        height: 300\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    })), React.createElement(BottomNavigation, {\n      style: {},\n      navigationState: {\n        index: index,\n        routes: routes\n      },\n      onIndexChange: setIndex,\n      renderScene: renderScene,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    if (!fontsLoaded) {\n      return null;\n    }\n\n    return React.createElement(PaperProvider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, React.createElement(LinearGradient, {\n      colors: ['#00c6ff', '#0072ff'],\n      style: styles.compress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }, React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      style: {\n        height: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.heading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, \"create a study session\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }, \"Subject:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      label: \"What will you be doing?\",\n      value: text,\n      onChangeText: function onChangeText(text) {\n        setText(text);\n        console.log(text);\n      },\n      mode: \"flat\",\n      placeholder: \"Math Homework\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }\n    }, \"Start Time:\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"What time will you start?\",\n      value: text5,\n      onChangeText: onChangeText5,\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"3:00 pm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }\n    }), React.createElement(HelperText, {\n      type: \"error\",\n      visible: hasTimeErrors(text5),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 29\n      }\n    }, \"Incorrect time format!\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 25\n      }\n    }, \"Work and Break Cycle\")), React.createElement(View, {\n      style: {\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 21\n      }\n    }, React.createElement(DropDown, {\n      label: 'Working Minutes : Resting Minutes',\n      mode: 'flat',\n      theme: {\n        colors: {\n          primary: 'black'\n        }\n      },\n      value: gender,\n      setValue: setGender,\n      list: genderList,\n      visible: showDropDown,\n      showDropDown: function showDropDown() {\n        return setShowDropDown(true);\n      },\n      onDismiss: function onDismiss() {\n        setShowDropDown(false);\n      },\n      inputProps: {\n        right: React.createElement(TextInput.Icon, {\n          name: 'menu-down',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 40\n          }\n        })\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 25\n      }\n    }, \"Number of Cycles\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      label: \"How many cycles do you want to complete?\",\n      value: text2,\n      onChangeText: onChangeText2,\n      mode: \"flat\",\n      placeholder: \"3\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 21\n      }\n    }), React.createElement(HelperText, {\n      type: \"error\",\n      visible: hasErrors(text2),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 29\n      }\n    }, \"Only input numbers!\")), React.createElement(View, {\n      style: {\n        paddingLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'ProximaNovaBold',\n        fontSize: 25,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }\n    }, \"Repeating Days\")), React.createElement(View, {\n      style: {\n        padding: 20,\n        paddingTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      label: \"Which days do you want to repeat this study session?\",\n      value: text6,\n      onChangeText: function onChangeText(text6) {\n        setText6(text6);\n      },\n      mode: \"flat\",\n      style: {\n        backgroundColor: \"transparent\",\n        height: 60,\n        color: 'white'\n      },\n      theme: {\n        colors: {\n          primary: '#ffffff'\n        }\n      },\n      placeholder: \"'None' or 'monday tuesday friday'\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        height: 25\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return handleSubmit();\n      },\n      style: {\n        width: \"90%\",\n        backgroundColor: '#c21f1f',\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.textations,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 29\n      }\n    }, \"Submit\"))), React.createElement(View, {\n      style: {\n        height: 300\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }\n    })), React.createElement(BottomNavigation, {\n      style: {},\n      navigationState: {\n        index: index,\n        routes: routes\n      },\n      onIndexChange: setIndex,\n      renderScene: renderScene,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 21\n      }\n    })));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  compress: {\n    paddingLeft: \"5%\",\n    paddingRight: \"5%\"\n  },\n  heading: {\n    fontFamily: 'OpenSansBold',\n    fontSize: 40,\n    marginTop: '30%',\n    textAlign: \"center\",\n    marginBottom: '5%',\n    color: \"#ffffff\"\n  },\n  input: {\n    padding: 20,\n    fontSize: 60,\n    textAlign: 'center'\n  },\n  containerStyle: {\n    flex: 1,\n    marginHorizontal: 20,\n    justifyContent: 'center'\n  },\n  textations: {\n    fontSize: 25,\n    color: \"#fff\"\n  },\n  buttonContainer: {\n    alignItems: 'center'\n  }\n});\nexport default CreationScreen;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/sdhacks/day.ly-Priv/App/screens/creation.js"],"names":["StatusBar","React","useState","DropDown","Provider","PaperProvider","Appbar","Text","BottomNavigation","TextInput","Button","HelperText","useFonts","LinearGradient","addSess","useDispatch","state","fontsLoaded","CreationScreen","navigation","cycle","numCycles","totalDuration","dispatch","submitSess","sess","handleSubmit","name","text","starTime","text5","time","lenWork","lenRest","day","text6","navigate","issue","setText","text2","setText2","onChangeText2","onChangeText3","text3","setText3","onChangeText4","text4","setText4","onChangeText5","setText5","onChangeText6","setText6","hasTimeErrors","textt","includes","hasErrors","Number","MusicRoute","AlbumsRoute","RecentsRoute","index","setIndex","key","title","icon","routes","renderScene","SceneMap","music","albums","recents","showDropDown","setShowDropDown","gender","setGender","genderList","label","value","require","styles","compress","height","padding","heading","paddingLeft","fontFamily","fontSize","color","paddingTop","console","log","backgroundColor","colors","primary","right","buttonContainer","width","borderRadius","textations","StyleSheet","create","container","flex","alignItems","justifyContent","paddingRight","marginTop","textAlign","marginBottom","input","containerStyle","marginHorizontal"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\n// import React, {Component} from 'react';\r\n// import {useState, Component, React } from 'react';\r\nimport React, { useState } from 'react';\r\nimport DropDown from 'react-native-paper-dropdown';\r\n// import App from '././App';\r\n// import { StyleSheet, Text, View, Button, Alert } from 'react-native';\r\nimport {StyleSheet, SafeAreaView, View, FlatList, ScrollView } from 'react-native';\r\nimport {Provider as PaperProvider , Appbar, Text, BottomNavigation, TextInput, Button, HelperText} from 'react-native-paper';\r\nimport { useFonts } from 'expo-font';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport {addSess} from '../actions/action';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nstate = {\r\n  fontsLoaded: false,\r\n}\r\n\r\nconst CreationScreen = ({navigation}) =>{\r\n    let cycle = [0,0];\r\n    let numCycles = 0;\r\n    let totalDuration = 0;\r\n\r\n    const dispatch = useDispatch();\r\n    const submitSess = (sess) => dispatch(addSess(sess))\r\n\r\n    const handleSubmit = () => {\r\n        submitSess({name: text, starTime: text5, time: totalDuration, cycle: numCycles, lenWork: cycle[0], lenRest: cycle[1], day: text6})\r\n        navigation.navigate(\"HomePage\")\r\n    }\r\n    const issue = false;\r\n    //text name\r\n    //text2 number of cycles\r\n    //text3 custom workcycle\r\n    //text4 custom restcycle\r\n    //text5 start time 8:00 pm\r\n    //text6 duration time\r\n    const [text, setText] = React.useState('');\r\n\r\n    const [text2, setText2] = React.useState('');\r\n\r\n    const onChangeText2 = text2 => setText2(text2);\r\n\r\n    const onChangeText3 = text3 => setText3(text3);\r\n\r\n    const onChangeText4 = text4 => setText4(text4);\r\n\r\n    const onChangeText5 = text5 => setText5(text5);\r\n    const onChangeText6 = text6 => setText6(text6);\r\n\r\n    const hasTimeErrors = (textt) => {\r\n        // console.log(cycle[0] + \", \" + cycle[1]);\r\n\r\n        if(textt == \"\"||textt.includes(\":\") && (textt.includes(\"AM\") || textt.includes(\"PM\")  || textt.includes(\"pm\")  || textt.includes(\"am\"))){\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n\r\n    const hasErrors = (textt) => {\r\n        \r\n\r\n        if(Number(textt) || textt==\"\" || Number(textt) == 0){\r\n            // issue = false;\r\n            return false;\r\n        }\r\n        // issue = true;\r\n        return true;\r\n\r\n        // return !text2.includes('@');\r\n    };\r\n\r\n    const [text3, setText3] = React.useState('');\r\n\r\n    const [text4, setText4] = React.useState('');\r\n\r\n    const [text5, setText5] = React.useState('');\r\n\r\n    const [text6, setText6] = React.useState('');\r\n\r\n    // function customize (gen) {\r\n    //     if(gen == \"Custom\"){\r\n    //         return(\r\n    //             <View>\r\n    //                 <Text>Tester</Text>\r\n    //             </View>\r\n    //         );\r\n    //     }\r\n    // }\r\n\r\n\r\n    const MusicRoute = () => <Text></Text>;\r\n\r\n    const AlbumsRoute = () => <Text></Text>;\r\n    // const AlbumsRoute = () => navigation.navigate('HomePage');\r\n    const RecentsRoute = () => <Text></Text>;\r\n\r\n    const [index, setIndex] = React.useState(0);\r\n    const [routes] = React.useState([\r\n      { key: 'music', title: 'Music', icon: 'queue-music'},\r\n      { key: 'albums', title: 'Albums', icon: 'album'},\r\n      { key: 'recents', title: 'Recents', icon: 'history'},\r\n    ]);\r\n\r\n    const renderScene = BottomNavigation.SceneMap({\r\n        music: MusicRoute,\r\n        albums: AlbumsRoute,\r\n        recents: RecentsRoute,\r\n    });\r\n\r\n\r\n\r\n    const [showDropDown, setShowDropDown] = useState(false);\r\n    const [gender, setGender] = useState();\r\n       \r\n    // const genderList = [\r\n    //     { label: '25 Minute Work : 5 Minute Break', value: [25, 5] },\r\n    //     { label: '52 Minute Work : 17 Minute Break', value: [52, 17] },\r\n    //     { label: '90 Minute Work : 30 Minute Break', value: [90,30] },\r\n    //     // { label: 'Custom', value: 'Custom' },\r\n    // ];\r\n\r\n    const genderList = [\r\n        { label: '25 Minute Work : 5 Minute Break', value: \"Pomodoro\"},\r\n        { label: '52 Minute Work : 17 Minute Break', value: \"52/17\" },\r\n        { label: '90 Minute Work : 30 Minute Break', value: \"PomoX\" },\r\n        { label: 'Custom', value: 'Custom' },\r\n    ];\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        'OpenSansSemiBold': require('../assets/fonts/OpenSans-SemiBold.ttf'),\r\n        'OpenSansRegular': require('../assets/fonts/OpenSans-Regular.ttf'),\r\n        'OpenSansBold': require('../assets/fonts/OpenSans-Bold.ttf'),\r\n        'ProximaNovaRegular': require('../assets/fonts/ProximaNova-Regular.otf'),\r\n        'ProximaNovaBold': require('../assets/fonts/ProximaNova-Bold.otf'),\r\n    });\r\n\r\n    if(gender == \"Pomodoro\"){\r\n        cycle = [25, 5]\r\n    } else if(gender == \"52/17\"){\r\n        cycle = [52, 17]\r\n    } else if(gender == \"PomoX\"){\r\n        cycle = [90,30]\r\n    } else {\r\n        cycle = [Number(text3), Number(text4)]\r\n    }\r\n\r\n    numCycles = Number(text2);\r\n    totalDuration = numCycles * (cycle[0] + cycle[1]);\r\n\r\n\r\n    \r\n    if(gender == \"Custom\"){\r\n        if(!fontsLoaded) {\r\n            return null;\r\n        }\r\n        return (\r\n        \r\n        <PaperProvider>\r\n            \r\n            {/* <View>\r\n\r\n            <SafeAreaView>\r\n                <Appbar>\r\n                <Appbar.Action\r\n                    icon=\"archive\"\r\n                    onPress={() => console.log('Pressed archive')}\r\n                    />\r\n                    <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\r\n                    <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\r\n                    <Appbar.Action\r\n                    icon=\"delete\"\r\n                    onPress={() => console.log('Pressed delete')}\r\n                    />\r\n                </Appbar>\r\n            </SafeAreaView>\r\n\r\n            \r\n            </View> */}\r\n            <LinearGradient colors={['#00c6ff', '#0072ff']} style={styles.compress}>\r\n            <ScrollView showsVerticalScrollIndicator={false} showsHorizontalScrollIndicator={false}style={{height:\"100%\"}}>\r\n\r\n                <View style={{padding:5}}>\r\n                    <Text style={styles.heading }>create a study session</Text>\r\n                </View>\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Subject:</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"What will you be doing?\"\r\n                        value={text}\r\n                        onChangeText={text => {setText(text)\r\n                            console.log(text)}}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                        theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"Math Homework\"\r\n                        \r\n                        \r\n                        \r\n                    />\r\n                </View>\r\n\r\n\r\n\r\n\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Start Time:</Text>\r\n                </View>\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"What time will you start?\"\r\n                        value={text5}\r\n                        // onChangeText={text2 => {setText2(text2)\r\n                        //     console.log(text2)}}\r\n                        onChangeText={onChangeText5}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                            theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"3:00 pm\"\r\n                        />\r\n\r\n                            <HelperText type=\"error\" visible={hasTimeErrors(text5)}>\r\n                                Incorrect time format!\r\n                            </HelperText>      \r\n                </View>\r\n\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Work and Break Cycle</Text>\r\n                </View>\r\n\r\n\r\n\r\n\r\n                <View style={{padding:20}}>\r\n                    <DropDown\r\n                        label={'Working Minutes : Resting Minutes'}\r\n                        mode={'flat'}\r\n                        theme={{ colors: { primary: 'black'}}}  \r\n                        value={gender}\r\n                        setValue={setGender}\r\n                        list={genderList}\r\n                        visible={showDropDown}\r\n                        showDropDown={() => setShowDropDown(true)}\r\n                        onDismiss={() => {setShowDropDown(false)}}\r\n                        inputProps={{\r\n                            right: <TextInput.Icon name={'menu-down'} />,\r\n                        }}\r\n                        \r\n                    />\r\n\r\n                </View>\r\n\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Working Cycle:</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"How many minutes will one work cycle be?\"\r\n                        value={text3}\r\n                        // onChangeText={text3 => {setText3(text3)\r\n                        //     console.log(text3)}}\r\n                        onChangeText={onChangeText3}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                        theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"90\"\r\n                    />\r\n                    <HelperText type=\"error\" visible={hasErrors(text3)}>\r\n                                Only input numbers!\r\n                    </HelperText>\r\n                </View>\r\n\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Resting Cycle:</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"How many minutes will one rest cycle be?\"\r\n                        value={text4}\r\n                        // onChangeText={text4 => {setText4(text4)\r\n                        //     console.log(text4)}}\r\n                        onChangeText={onChangeText4}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                        theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"90\"  \r\n                    />\r\n                    <HelperText type=\"error\" visible={hasErrors(text4)}>\r\n                        Only input numbers!\r\n                    </HelperText>\r\n                </View>\r\n\r\n\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Number of Cycles:</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"How many cycles do you want to complete?\"\r\n                        value={text2}\r\n                        // onChangeText={text2 => {setText2(text2)\r\n                        //     console.log(text2)}}\r\n                        onChangeText={onChangeText2}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                            theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"3\"\r\n                        />\r\n\r\n                            <HelperText type=\"error\" visible={hasErrors(text2)}>\r\n                                Only input numbers!\r\n                            </HelperText>      \r\n                </View>\r\n\r\n                <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Repeating Days</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"Which days of the week do you want to repeat this study session?\"\r\n                        value={text6}\r\n                        onChangeText={text6 => {setText6(text6)}}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                        theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"'None' or 'monday tuesday friday'\"\r\n                        \r\n                        \r\n                        \r\n                    />\r\n                </View>\r\n\r\n                <View style={{height: 25}}/>\r\n    \r\n                    <View style={styles.buttonContainer}>\r\n                        <Button mode=\"contained\" onPress={() => handleSubmit()} style={{width: \"90%\", backgroundColor: '#c21f1f', borderRadius: 10}}>\r\n                            <Text style={styles.textations}>Submit</Text>\r\n                        </Button>\r\n                    </View>\r\n\r\n                {/* <View style={styles.buttonContainer}>\r\n                    <Button mode=\"contained\" onPress={() => console.log(gender)} style={{padding:10}}>\r\n                        <Text style={styles.textations}>gender test</Text>\r\n                    </Button>\r\n                </View> */}\r\n\r\n\r\n\r\n\r\n                <View style={{height:300}}>\r\n\r\n                </View>\r\n\r\n            </ScrollView>\r\n\r\n\r\n                <BottomNavigation style={{}}\r\n                    navigationState={{ index, routes }}\r\n                    onIndexChange={setIndex}\r\n                    renderScene={renderScene}\r\n                    // onTabPress={() => navigation.navigate('Welcome')}\r\n                    // barStyle={{ backgroundColor: '#449DD1' }}\r\n                />\r\n                </LinearGradient>\r\n            </PaperProvider>\r\n\r\n            );\r\n        } else {\r\n            if(!fontsLoaded) {\r\n                return null;\r\n            }\r\n            return(\r\n                <PaperProvider>\r\n                    <LinearGradient colors={['#00c6ff', '#0072ff']} style={styles.compress}>\r\n                {/* <View style={{backgroundColor:\"#6200ee\"}}>\r\n  \r\n                <SafeAreaView>\r\n                    <Appbar>\r\n                    <Appbar.Action\r\n                        icon=\"archive\"\r\n                        onPress={() => console.log('Pressed archive')}\r\n                        />\r\n                        <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\r\n                        <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\r\n                        <Appbar.Action\r\n                        icon=\"delete\"\r\n                        onPress={() => console.log('Pressed delete')}\r\n                        />\r\n                    </Appbar>\r\n                </SafeAreaView>\r\n                </View> */}\r\n\r\n                <ScrollView showsVerticalScrollIndicator={false} showsHorizontalScrollIndicator={false} style={{height:\"100%\"} }>\r\n                \r\n                    <View style={{padding:5}}>\r\n                        <Text style={styles.heading }>create a study session</Text>\r\n                    </View>\r\n                    <View style={{paddingLeft:20}}>\r\n                        <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Subject:</Text>\r\n                    </View>\r\n    \r\n    \r\n                    <View style={{padding:20, paddingTop:5}}>\r\n                        <TextInput\r\n                            label=\"What will you be doing?\"\r\n                            value={text}\r\n                            onChangeText={text => {setText(text)\r\n                                console.log(text)}}\r\n                            mode = \"flat\"\r\n                            placeholder=\"Math Homework\"\r\n                            style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                            theme={{ colors: { primary: '#ffffff'}}}  \r\n                        />\r\n                    </View>\r\n    \r\n\r\n\r\n                    <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Start Time:</Text>\r\n                </View>\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"What time will you start?\"\r\n                        value={text5}\r\n                        // onChangeText={text2 => {setText2(text2)\r\n                        //     console.log(text2)}}\r\n                        onChangeText={onChangeText5}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                            theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"3:00 pm\"\r\n                        />\r\n\r\n                            <HelperText type=\"error\" visible={hasTimeErrors(text5)}>\r\n                                Incorrect time format!\r\n                            </HelperText>      \r\n                </View>\r\n\r\n                    <View style={{paddingLeft:20}}>\r\n                        <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Work and Break Cycle</Text>\r\n                    </View>\r\n\r\n                    <View style={{padding:20}}>\r\n                        <DropDown\r\n                            label={'Working Minutes : Resting Minutes'}\r\n                            mode={'flat'}\r\n                            theme={{ colors: { primary: 'black'}}}  \r\n                            value={gender}\r\n                            setValue={setGender}\r\n                            list={genderList}\r\n                            visible={showDropDown}\r\n                            showDropDown={() => setShowDropDown(true)}\r\n                            onDismiss={() => {setShowDropDown(false)}}\r\n                            inputProps={{\r\n                                right: <TextInput.Icon name={'menu-down'} />,\r\n                            }}\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={{paddingLeft:20}}>\r\n                        <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Number of Cycles</Text>\r\n                    </View>\r\n\r\n                    \r\n    \r\n    \r\n                    <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"How many cycles do you want to complete?\"\r\n                        value={text2}\r\n                        // onChangeText={text2 => {setText2(text2)\r\n                        //     console.log(text2)}}\r\n                        onChangeText={onChangeText2\r\n                    }\r\n                        mode = \"flat\"\r\n                        placeholder=\"3\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                            theme={{ colors: { primary: '#ffffff'}}}  \r\n                        />\r\n\r\n                            <HelperText type=\"error\" visible={hasErrors(text2)}>\r\n                                Only input numbers!\r\n                            </HelperText>\r\n                    </View>\r\n\r\n                    <View style={{paddingLeft:20}}>\r\n                    <Text style={{fontFamily: 'ProximaNovaBold', fontSize: 25, color: 'white'}}>Repeating Days</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{padding:20, paddingTop:5}}>\r\n                    <TextInput\r\n                        label=\"Which days do you want to repeat this study session?\"\r\n                        value={text6}\r\n                        onChangeText={text6 => {setText6(text6)}}\r\n                        mode = \"flat\"\r\n                        style={{backgroundColor: \"transparent\",height: 60, color: 'white'}}\r\n                        theme={{ colors: { primary: '#ffffff'}}}  \r\n                        placeholder=\"'None' or 'monday tuesday friday'\"\r\n                        \r\n                        \r\n                        \r\n                    />\r\n                </View>\r\n\r\n    \r\n                    <View style={{height: 25}}/>\r\n                    {/*SUBMIT*/}\r\n                    <View style={styles.buttonContainer}>\r\n                        <Button mode=\"contained\" onPress={() => handleSubmit()} style={{width: \"90%\", backgroundColor: '#c21f1f', borderRadius: 10}}>\r\n                            <Text style={styles.textations}>Submit</Text>\r\n                        </Button>\r\n                    </View>\r\n    \r\n                    {/* <View style={styles.buttonContainer}>\r\n                        <Button mode=\"contained\" onPress={() => console.log(gender)} style={{padding:10}}>\r\n                            <Text style={styles.textations}>gender test</Text>\r\n                        </Button>\r\n                    </View> */}\r\n    \r\n                    <View style={{height:300}}>\r\n    \r\n                    </View>\r\n    \r\n                </ScrollView>\r\n    \r\n                    <BottomNavigation style={{}}\r\n                        navigationState={{ index, routes }}\r\n                        onIndexChange={setIndex}\r\n                        renderScene={renderScene}\r\n                        // onTabPress={() => navigation.navigate('Welcome')}\r\n                        // barStyle={{ backgroundColor: '#449DD1' }}\r\n                    />\r\n                    \r\n                    \r\n                    </LinearGradient>\r\n                </PaperProvider>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    compress: {\r\n        paddingLeft: \"5%\",\r\n        paddingRight: \"5%\"\r\n    },\r\n    heading: {\r\n        fontFamily: 'OpenSansBold',\r\n        fontSize: 40,\r\n        marginTop: '30%',\r\n        textAlign: \"center\",\r\n        marginBottom: '5%',\r\n        color: \"#ffffff\"\r\n    },\r\n    input: {\r\n        padding: 20,\r\n        fontSize: 60,\r\n        textAlign: 'center',\r\n    },\r\n    containerStyle: {\r\n        flex: 1,\r\n        marginHorizontal: 20,\r\n        justifyContent: 'center',\r\n        },\r\n    textations: {\r\n        fontSize:25,\r\n        color:\"#fff\"\r\n        \r\n    },\r\n    buttonContainer: {\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nexport default CreationScreen;"]},"metadata":{},"sourceType":"module"}