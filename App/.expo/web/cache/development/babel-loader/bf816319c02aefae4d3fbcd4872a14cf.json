{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\sdhacks\\\\day.ly-Priv\\\\App\\\\screens\\\\home_page.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from 'react-native-paper';\nimport { useFonts } from 'expo-font';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { delSess } from \"../actions/action\";\nimport { useDispatch, useSelector } from 'react-redux';\nstate = {\n  fontsLoaded: false\n};\n\nvar HomePage = function HomePage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    'OpenSansSemiBold': require(\"../assets/fonts/OpenSans-SemiBold.ttf\"),\n    'OpenSansRegular': require(\"../assets/fonts/OpenSans-Regular.ttf\"),\n    'OpenSansBold': require(\"../assets/fonts/OpenSans-Bold.ttf\"),\n    'ProximaNovaRegular': require(\"../assets/fonts/ProximaNova-Regular.otf\"),\n    'ProximaNovaBold': require(\"../assets/fonts/ProximaNova-Bold.otf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var session = useSelector(function (state) {\n    return state.session;\n  });\n  var d = new Date();\n  var weekday = new Array(7);\n  weekday[0] = \"Sunday\";\n  weekday[1] = \"Monday\";\n  weekday[2] = \"Tuesday\";\n  weekday[3] = \"Wednesday\";\n  weekday[4] = \"Thursday\";\n  weekday[5] = \"Friday\";\n  weekday[6] = \"Saturday\";\n  var dayOfTheWeek = weekday[d.getDay()];\n  var todaySess = [];\n\n  for (i = 0; i < session.length; i++) {\n    if (session[i].day == dayOfTheWeek.toLowerCase()) {\n      todaySess.push(session[i]);\n    }\n  }\n\n  var handleEdit = function handleEdit(item) {\n    Alert.alert(\"Do you want to remove \", item.name, [{\n      text: \"No\",\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        return del(item);\n      }\n    }]);\n  };\n\n  var handleView = function handleView(item) {\n    console.log(item.name);\n    navigation.navigate(\"SessionDetails\", {\n      name: item.name,\n      starTime: item.starTime,\n      dur: item.time,\n      type: [item.lenWork, item.lenRest]\n    });\n  };\n\n  var dispatch = useDispatch();\n\n  var del = function del(sess) {\n    return dispatch(delSess(sess));\n  };\n\n  var createNew = function createNew() {\n    navigation.navigate('CreationScreen');\n  };\n\n  var totalWeek = function totalWeek() {\n    navigation.navigate('StudySessionsSettings');\n  };\n\n  if (todaySess.length == 0) {\n    if (!fontsLoaded) {\n      return null;\n    }\n\n    return React.createElement(LinearGradient, {\n      colors: ['#00c6ff', '#0072ff'],\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return totalWeek();\n      },\n      style: styles.calendar,\n      icon: \"calendar-month\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.heading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }\n    }, \"welcome, johnathan\"), React.createElement(Text, {\n      style: styles.subHeading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"There are no sessions for today :( \", \"\\n\", \"Please feel free to create a session \", \"\\n\", \"or check out other day.ly tasks\"), React.createElement(View, {\n      style: {\n        width: \"50%\",\n        alignSelf: \"center\",\n        marginBottom: \"15%\",\n        marginTop: \"5%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, React.createElement(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return createNew();\n      },\n      style: {\n        backgroundColor: '#c21f1f',\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"New Session\")));\n  } else {\n      if (!fontsLoaded) {\n        return null;\n      }\n\n      return React.createElement(LinearGradient, {\n        colors: ['#00c6ff', '#0072ff'],\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return totalWeek();\n        },\n        style: styles.calendar,\n        icon: \"calendar-month\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.heading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \"welcome, johnathan\"), React.createElement(Text, {\n        style: styles.subHeading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, \" Here are your day.ly tasks for \", dayOfTheWeek, \" :)\"), React.createElement(FlatList, {\n        keyExtractor: function keyExtractor(item) {\n          return item.key.toString();\n        },\n        data: todaySess,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(TouchableOpacity, {\n            style: styles.itemContainer,\n            onLongPress: function onLongPress() {\n              return handleEdit(item);\n            },\n            onPress: function onPress() {\n              return handleView(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            style: styles.item,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }\n          }, item.name + \" - \" + item.starTime));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          width: \"50%\",\n          marginLeft: \"50%\",\n          marginBottom: \"15%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return createNew();\n        },\n        style: {\n          backgroundColor: '#c21f1f',\n          borderRadius: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, \"New Session\")));\n    }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#499ab8',\n    paddingHorizontal: 35,\n    paddingTop: 50\n  },\n  heading: {\n    fontFamily: 'OpenSansBold',\n    fontSize: 40,\n    marginTop: '10%',\n    textAlign: \"center\",\n    marginBottom: '5%',\n    color: \"#ffffff\"\n  },\n  subHeading: {\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 20,\n    fontFamily: 'ProximaNovaRegular',\n    color: \"#ffffff\"\n  },\n  scrollView: {\n    marginHorizontal: 20,\n    marginVertical: 50\n  },\n  itemContainer: {\n    marginTop: 25,\n    padding: 30,\n    backgroundColor: '#f2f2f2',\n    fontSize: 24,\n    borderRadius: 20,\n    fontFamily: 'ProximaNovaRegular'\n  },\n  item: {\n    color: \"black\",\n    fontSize: 24,\n    fontFamily: 'ProximaNovaRegular'\n  },\n  calendar: {\n    paddingLeft: 10,\n    marginLeft: '95%',\n    borderRadius: 10,\n    backgroundColor: '#c21f1f'\n  }\n});\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/sdhacks/day.ly-Priv/App/screens/home_page.js"],"names":["StatusBar","React","useState","Button","useFonts","LinearGradient","delSess","useDispatch","useSelector","state","fontsLoaded","HomePage","navigation","require","session","d","Date","weekday","Array","dayOfTheWeek","getDay","todaySess","i","length","day","toLowerCase","push","handleEdit","item","Alert","alert","name","text","style","onPress","del","handleView","console","log","navigate","starTime","dur","time","type","lenWork","lenRest","dispatch","sess","createNew","totalWeek","styles","container","calendar","heading","subHeading","width","alignSelf","marginBottom","marginTop","backgroundColor","borderRadius","key","toString","itemContainer","marginLeft","StyleSheet","create","flex","paddingHorizontal","paddingTop","fontFamily","fontSize","textAlign","color","paddingBottom","scrollView","marginHorizontal","marginVertical","padding","paddingLeft"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,SAAQC,OAAR;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGAC,KAAK,GAAG;AACNC,EAAAA,WAAW,EAAE;AADP,CAAR;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAAA,kBAGZR,QAAQ,CAAC;AAC3B,wBAAoBS,OAAO,yCADA;AAE3B,uBAAmBA,OAAO,wCAFC;AAG3B,oBAAgBA,OAAO,qCAHI;AAI3B,0BAAsBA,OAAO,2CAJF;AAK3B,uBAAmBA,OAAO;AALC,GAAD,CAHI;AAAA;AAAA,MAG3BH,WAH2B;;AAe9B,MAAMI,OAAO,GAAGN,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACK,OAAV;AAAA,GAAN,CAA3B;AACA,MAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,MAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAd;AACAD,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,SAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,WAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,UAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,UAAb;AACA,MAAIE,YAAY,GAAGF,OAAO,CAACF,CAAC,CAACK,MAAF,EAAD,CAA1B;AACA,MAAMC,SAAS,GAAG,EAAlB;;AACA,OAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGR,OAAO,CAACS,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC,QAAIR,OAAO,CAACQ,CAAD,CAAP,CAAWE,GAAX,IAAkBL,YAAY,CAACM,WAAb,EAAtB,EAAiD;AAC/CJ,MAAAA,SAAS,CAACK,IAAV,CAAeZ,OAAO,CAACQ,CAAD,CAAtB;AACD;AACF;;AAGD,MAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3BC,IAAAA,KAAK,CAACC,KAAN,CACE,wBADF,EAEEF,IAAI,CAACG,IAFP,EAGE,CACE;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADF,EAKE;AACED,MAAAA,IAAI,EAAE,KADR;AAEEE,MAAAA,OAAO,EAAE;AAAA,eAAMC,GAAG,CAACP,IAAD,CAAT;AAAA;AAFX,KALF,CAHF;AAeD,GAhBD;;AAiBA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACR,IAAD,EAAU;AAC3BS,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACG,IAAjB;AACAnB,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,gBAApB,EAAsC;AACpCR,MAAAA,IAAI,EAAEH,IAAI,CAACG,IADyB;AAEpCS,MAAAA,QAAQ,EAAEZ,IAAI,CAACY,QAFqB;AAGpCC,MAAAA,GAAG,EAAEb,IAAI,CAACc,IAH0B;AAIpCC,MAAAA,IAAI,EAAE,CAACf,IAAI,CAACgB,OAAN,EAAchB,IAAI,CAACiB,OAAnB;AAJ8B,KAAtC;AAMD,GARD;;AAaA,MAAMC,QAAQ,GAAGvC,WAAW,EAA5B;;AAEA,MAAM4B,GAAG,GAAG,SAANA,GAAM,CAACY,IAAD;AAAA,WAAUD,QAAQ,CAACxC,OAAO,CAACyC,IAAD,CAAR,CAAlB;AAAA,GAAZ;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBpC,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,gBAApB;AACD,GAFD;;AAIA,MAAMU,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBrC,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,uBAApB;AACD,GAFD;;AAKA,MAAIlB,SAAS,CAACE,MAAV,IAAoB,CAAxB,EAA0B;AAExB,QAAG,CAACb,WAAJ,EAAiB;AACf,aAAO,IAAP;AACD;;AACD,WAEE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAAxB;AAAgD,MAAA,KAAK,EAAEwC,MAAM,CAACC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE;AAAA,eAAMF,SAAS,EAAf;AAAA,OAAlC;AAAqD,MAAA,KAAK,EAAEC,MAAM,CAACE,QAAnE;AAA6E,MAAA,IAAI,EAAC,gBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHH,EAME,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAIH,MAAM,CAACI,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAsE,IAAtE,2CACsC,IADtC,oCANF,EASE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,SAAS,EAAE,QAA1B;AAAoCC,QAAAA,YAAY,EAAE,KAAlD;AAAyDC,QAAAA,SAAS,EAAE;AAApE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE;AAAA,eAAMV,SAAS,EAAf;AAAA,OAAlC;AAAqD,MAAA,KAAK,EAAE;AAACW,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,YAAY,EAAE;AAA3C,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADV,CATF,CAFF;AAiBD,GAtBD,MAwBI;AACF,UAAG,CAAClD,WAAJ,EAAiB;AACf,eAAO,IAAP;AACD;;AACD,aACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAAxB;AAAgD,QAAA,KAAK,EAAEwC,MAAM,CAACC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAMF,SAAS,EAAf;AAAA,SAAlC;AAAqD,QAAA,KAAK,EAAEC,MAAM,CAACE,QAAnE;AAA6E,QAAA,IAAI,EAAC,gBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGH,MAAM,CAACI,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAkEnC,YAAlE,QAPF,EASE,oBAAC,QAAD;AACE,QAAA,YAAY,EAAE,sBAAAS,IAAI;AAAA,iBAAIA,IAAI,CAACiC,GAAL,CAASC,QAAT,EAAJ;AAAA,SADpB;AAEE,QAAA,IAAI,EAAEzC,SAFR;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGO,IAAH,SAAGA,IAAH;AAAA,iBACV,oBAAC,gBAAD;AAAkB,YAAA,KAAK,EAAEsB,MAAM,CAACa,aAAhC;AAA+C,YAAA,WAAW,EAAE;AAAA,qBAAMpC,UAAU,CAACC,IAAD,CAAhB;AAAA,aAA5D;AAAoF,YAAA,OAAO,EAAE;AAAA,qBAAMQ,UAAU,CAACR,IAAD,CAAhB;AAAA,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEsB,MAAM,CAACtB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2BA,IAAI,CAACG,IAAL,GAAY,KAAZ,GAAoBH,IAAI,CAACY,QAApD,CADF,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAmBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAE,KAAR;AAAeS,UAAAA,UAAU,EAAE,KAA3B;AAAkCP,UAAAA,YAAY,EAAE;AAAhD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAMT,SAAS,EAAf;AAAA,SAAlC;AAAqD,QAAA,KAAK,EAAE;AAACW,UAAAA,eAAe,EAAE,SAAlB;AAA6BC,UAAAA,YAAY,EAAE;AAA3C,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADV,CAnBF,CADF;AA0BD;AACJ,CApID;;AAsIA,IAAMV,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,IAAI,EAAE,CADG;AAETR,IAAAA,eAAe,EAAE,SAFR;AAGTS,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,UAAU,EAAE;AAJH,GADoB;AAO/BhB,EAAAA,OAAO,EAAE;AACPiB,IAAAA,UAAU,EAAE,cADL;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPb,IAAAA,SAAS,EAAE,KAHJ;AAIPc,IAAAA,SAAS,EAAE,QAJJ;AAKPf,IAAAA,YAAY,EAAE,IALP;AAMPgB,IAAAA,KAAK,EAAE;AANA,GAPsB;AAe/BnB,EAAAA,UAAU,EAAE;AACViB,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVE,IAAAA,aAAa,EAAE,EAHL;AAIVJ,IAAAA,UAAU,EAAE,oBAJF;AAKVG,IAAAA,KAAK,EAAE;AALG,GAfmB;AAwB/BE,EAAAA,UAAU,EAAC;AACTC,IAAAA,gBAAgB,EAAE,EADT;AAETC,IAAAA,cAAc,EAAE;AAFP,GAxBoB;AA4B/Bd,EAAAA,aAAa,EAAE;AACbL,IAAAA,SAAS,EAAE,EADE;AAEboB,IAAAA,OAAO,EAAE,EAFI;AAGbnB,IAAAA,eAAe,EAAE,SAHJ;AAIbY,IAAAA,QAAQ,EAAE,EAJG;AAKbX,IAAAA,YAAY,EAAE,EALD;AAMbU,IAAAA,UAAU,EAAE;AANC,GA5BgB;AAoC/B1C,EAAAA,IAAI,EAAE;AACJ6C,IAAAA,KAAK,EAAE,OADH;AAEJF,IAAAA,QAAQ,EAAE,EAFN;AAGJD,IAAAA,UAAU,EAAE;AAHR,GApCyB;AAyC/BlB,EAAAA,QAAQ,EAAE;AAER2B,IAAAA,WAAW,EAAC,EAFJ;AAGRf,IAAAA,UAAU,EAAE,KAHJ;AAIRJ,IAAAA,YAAY,EAAE,EAJN;AAKRD,IAAAA,eAAe,EAAE;AALT;AAzCqB,CAAlB,CAAf;AAmDA,eAAehD,QAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Alert, FlatList, TouchableOpacity} from 'react-native';\r\nimport {Button} from 'react-native-paper';\r\nimport { useFonts } from 'expo-font';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport {delSess} from '../actions/action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nstate = {\r\n  fontsLoaded: false,\r\n}\r\nconst HomePage = ({navigation}) =>{\r\n  \r\n  \r\n  let [fontsLoaded] = useFonts({\r\n    'OpenSansSemiBold': require('../assets/fonts/OpenSans-SemiBold.ttf'),\r\n    'OpenSansRegular': require('../assets/fonts/OpenSans-Regular.ttf'),\r\n    'OpenSansBold': require('../assets/fonts/OpenSans-Bold.ttf'),\r\n    'ProximaNovaRegular': require('../assets/fonts/ProximaNova-Regular.otf'),\r\n    'ProximaNovaBold': require('../assets/fonts/ProximaNova-Bold.otf'),\r\n  });\r\n \r\n    //temp place holder for data\r\n    //startTime should an int, so its easier to use with an clock/time api idk\r\n    //I just left it as a string so we can output am/pm \r\n    \r\n    const session = useSelector(state => state.session);\r\n    var d = new Date();\r\n    var weekday = new Array(7);\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    var dayOfTheWeek = weekday[d.getDay()];\r\n    const todaySess = []\r\n    for (i = 0; i < session.length; i++){\r\n      if (session[i].day == dayOfTheWeek.toLowerCase()){\r\n        todaySess.push(session[i])\r\n      }\r\n    }\r\n \r\n    //Function handles\r\n    const handleEdit = (item) => {\r\n      Alert.alert(\r\n        \"Do you want to remove \", \r\n        item.name,\r\n        [\r\n          { \r\n            text: \"No\",\r\n            style: \"cancel\"\r\n          },\r\n          {\r\n            text: \"Yes\",\r\n            onPress: () => del(item),\r\n          },\r\n          \r\n        ]\r\n      )\r\n    };    \r\n    const handleView = (item) => {\r\n      console.log(item.name)\r\n      navigation.navigate(\"SessionDetails\", {\r\n        name: item.name,\r\n        starTime: item.starTime,\r\n        dur: item.time,\r\n        type: [item.lenWork,item.lenRest],\r\n      })\r\n    }\r\n    \r\n    \r\n\r\n    //Connecting global \r\n    const dispatch = useDispatch();\r\n\r\n    const del = (sess) => dispatch(delSess(sess))\r\n\r\n    const createNew = () => {\r\n      navigation.navigate('CreationScreen')\r\n    };\r\n\r\n    const totalWeek = () => {\r\n      navigation.navigate('StudySessionsSettings')\r\n    };\r\n \r\n    //Case for empty list of sessions \r\n    if (todaySess.length == 0){\r\n\r\n      if(!fontsLoaded) {\r\n        return null;\r\n      }\r\n      return (\r\n        \r\n        <LinearGradient colors={['#00c6ff', '#0072ff']} style={styles.container}>\r\n        <Button mode=\"contained\" onPress={() => totalWeek()} style={styles.calendar} icon=\"calendar-month\"> \r\n        </Button>\r\n           <Text style={styles.heading}> \r\n              welcome, johnathan\r\n          </Text>\r\n          <Text style = {styles.subHeading}>There are no sessions for today :( {\"\\n\"} \r\n          Please feel free to create a session {\"\\n\"}\r\n           or check out other day.ly tasks</Text>\r\n          <View style={{width: \"50%\", alignSelf: \"center\", marginBottom: \"15%\", marginTop: \"5%\"}}>\r\n                    <Button mode=\"contained\" onPress={() => createNew()} style={{backgroundColor: '#c21f1f', borderRadius: 10}}>\r\n                        New Session\r\n                    </Button></View>\r\n        </LinearGradient>\r\n      );\r\n    }\r\n    //If there is not an empty list\r\n    else{\r\n      if(!fontsLoaded) {\r\n        return null;\r\n      }\r\n      return (\r\n        <LinearGradient colors={['#00c6ff', '#0072ff']} style={styles.container}>\r\n            <Button mode=\"contained\" onPress={() => totalWeek()} style={styles.calendar} icon=\"calendar-month\"> \r\n\r\n            </Button>\r\n          <Text style={styles.heading}> \r\n              welcome, johnathan\r\n          </Text>\r\n          <Text style ={styles.subHeading}> Here are your day.ly tasks for {dayOfTheWeek} :)</Text>\r\n          {/* List of Sessions*/}\r\n          <FlatList\r\n            keyExtractor={item => item.key.toString()}\r\n            data={todaySess}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity style={styles.itemContainer} onLongPress={() => handleEdit(item)} onPress={() => handleView(item)}>\r\n                <Text style={styles.item}>{item.name + \" - \" + item.starTime}</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n          {/*add new button}*/}\r\n          <View style={{width: \"50%\", marginLeft: \"50%\", marginBottom: \"15%\"}}>\r\n                    <Button mode=\"contained\" onPress={() => createNew()} style={{backgroundColor: '#c21f1f', borderRadius: 10}}>\r\n                        New Session\r\n                    </Button></View>\r\n        </LinearGradient>\r\n        );\r\n    }\r\n}\r\n    \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#499ab8',\r\n    paddingHorizontal: 35,\r\n    paddingTop: 50,\r\n  },\r\n  heading: {\r\n    fontFamily: 'OpenSansBold',\r\n    fontSize: 40,\r\n    marginTop: '10%',\r\n    textAlign: \"center\",\r\n    marginBottom: '5%',\r\n    color: \"#ffffff\"\r\n  },\r\n  subHeading: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    paddingBottom: 20,\r\n    fontFamily: 'ProximaNovaRegular',\r\n    color: \"#ffffff\"\r\n    \r\n  },\r\n  \r\n  scrollView:{\r\n    marginHorizontal: 20,\r\n    marginVertical: 50,\r\n  },\r\n  itemContainer: {\r\n    marginTop: 25,\r\n    padding: 30,\r\n    backgroundColor: '#f2f2f2',\r\n    fontSize: 24,\r\n    borderRadius: 20,\r\n    fontFamily: 'ProximaNovaRegular'\r\n  },\r\n  item: {\r\n    color: \"black\",\r\n    fontSize: 24,\r\n    fontFamily: 'ProximaNovaRegular',\r\n  },\r\n  calendar: {\r\n    // marginBottom: 10,\r\n    paddingLeft:10,\r\n    marginLeft: '95%',\r\n    borderRadius: 10,\r\n    backgroundColor: '#c21f1f',\r\n    // width: '20%',\r\n  }\r\n});\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}