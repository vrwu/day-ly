{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\sdhacks\\\\day.ly-Priv\\\\App\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-paper';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport EnterName from \"./screens/enter_name\";\nimport CreationScreen from \"./screens/creation\";\nimport HomePage from \"./screens/home_page\";\nimport StudySessionsSettings from \"./screens/study_sessions\";\nimport SessionDetails from \"./screens/session_details\";\nimport TimerPage from \"./screens/timer.js\";\nimport { Provider } from 'react-redux';\nimport sessReducer from \"./reducers/reducer\";\nimport { createStore } from 'redux';\nimport { render } from 'react-dom';\nvar Stack = createStackNavigator();\n\nvar Store = function Store() {\n  return createStore(sessReducer);\n};\n\nstate = {\n  fontsLoaded: false\n};\n\nfunction Welcome(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    'OpenSansSemiBold': require(\"./assets/fonts/OpenSans-SemiBold.ttf\"),\n    'OpenSansRegular': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'OpenSansBold': require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n    'ProximaNovaRegular': require(\"./assets/fonts/ProximaNova-Regular.otf\"),\n    'ProximaNovaBold': require(\"./assets/fonts/ProximaNova-Bold.otf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return React.createElement(LinearGradient, {\n    colors: ['#00c6ff', '#0072ff'],\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \" welcome to \", \"\\n\", \" day.ly!\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"find your productivity\"), React.createElement(View, {\n    style: [{\n      margin: 10,\n      width: \"40%\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate('EnterName');\n    },\n    style: {\n      backgroundColor: '#c21f1f',\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Get Started\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  })));\n}\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: Store(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Welcome\",\n        component: Welcome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"EnterName\",\n        component: EnterName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"CreationScreen\",\n        component: CreationScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"HomePage\",\n        component: HomePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"StudySessionsSettings\",\n        component: StudySessionsSettings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"SessionDetails\",\n        component: SessionDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TimerPage\",\n        component: TimerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#33b5e5',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontFamily: 'OpenSansBold',\n    fontSize: 40,\n    marginTop: '15%',\n    textAlign: \"center\",\n    marginBottom: '5%',\n    color: \"#ffffff\"\n  },\n  text: {\n    fontFamily: 'ProximaNovaRegular',\n    fontSize: 15,\n    textAlign: 'center',\n    color: '#ffffff'\n  }\n});","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/sdhacks/day.ly-Priv/App/App.js"],"names":["StatusBar","React","Component","Button","LinearGradient","useFonts","NavigationContainer","createStackNavigator","EnterName","CreationScreen","HomePage","StudySessionsSettings","SessionDetails","TimerPage","Provider","sessReducer","createStore","render","Stack","Store","state","fontsLoaded","Welcome","navigation","require","styles","container","heading","text","margin","width","navigate","backgroundColor","borderRadius","App","headerShown","StyleSheet","create","flex","alignItems","justifyContent","fontFamily","fontSize","marginTop","textAlign","marginBottom","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {Component} from 'react';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\nimport {Button} from 'react-native-paper';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useFonts } from 'expo-font';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport EnterName from './screens/enter_name';\r\nimport CreationScreen from './screens/creation';\r\nimport HomePage from './screens/home_page';\r\nimport StudySessionsSettings from './screens/study_sessions';\r\nimport SessionDetails from './screens/session_details';\r\nimport TimerPage from './screens/timer.js';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport sessReducer from './reducers/reducer';\r\nimport { createStore } from 'redux';\r\nimport { render } from 'react-dom';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Store = () => createStore(sessReducer);\r\n\r\nstate = {\r\n  fontsLoaded: false,\r\n}\r\n\r\nfunction Welcome({ navigation }) {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    'OpenSansSemiBold': require('./assets/fonts/OpenSans-SemiBold.ttf'),\r\n    'OpenSansRegular': require('./assets/fonts/OpenSans-Regular.ttf'),\r\n    'OpenSansBold': require('./assets/fonts/OpenSans-Bold.ttf'),\r\n    'ProximaNovaRegular': require('./assets/fonts/ProximaNova-Regular.otf'),\r\n    'ProximaNovaBold': require('./assets/fonts/ProximaNova-Bold.otf'),\r\n  });\r\n\r\n  if(!fontsLoaded) {\r\n    return null;\r\n  }\r\n  return (\r\n    <LinearGradient colors={['#00c6ff', '#0072ff']} style={styles.container}>\r\n    <Text style={styles.heading}> welcome to {\"\\n\"} day.ly!</Text>\r\n    <Text style={styles.text}>find your productivity</Text>\r\n    <View style={[{margin:10, width:\"40%\"}]}>\r\n\r\n    <Button \r\n    mode=\"contained\" \r\n    onPress={() => navigation.navigate('EnterName')} \r\n    style={{backgroundColor: '#c21f1f', borderRadius: 10}}>Get Started</Button>\r\n    {/* <Button \r\n    mode=\"contained\" \r\n    onPress={() => navigation.navigate('HomePage')} \r\n    style={{backgroundColor: '#c21f1f', borderRadius: 10}}>HomePage</Button> */}\r\n    {/* <Button \r\n    mode=\"contained\" \r\n    onPress={() => navigation.navigate('CreationScreen')} \r\n    style={{backgroundColor: '#c21f1f', borderRadius: 10}}>Ween's Page</Button> */}\r\n    {/* <Button \r\n    mode=\"contained\" \r\n    onPress={() => navigation.navigate('StudySessionsSettings')} \r\n    style={{backgroundColor: '#c21f1f', borderRadius: 10}}>Explosive Page</Button>\r\n    <Button \r\n    mode=\"contained\" \r\n    onPress={() => navigation.navigate('TimerPage')} \r\n    style={{backgroundColor: '#c21f1f', borderRadius: 10}}>Timer page</Button> */}\r\n    \r\n    <StatusBar style=\"auto\" />\r\n    </View>\r\n  </LinearGradient>\r\n  );\r\n}\r\n\r\nexport default class App extends Component{\r\n  render(){\r\n  return (\r\n    <Provider store = {Store()}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator screenOptions={{headerShown: false}}>\r\n          <Stack.Screen name=\"Welcome\" component={Welcome}/>\r\n          <Stack.Screen name=\"EnterName\" component={EnterName}/>\r\n          <Stack.Screen name=\"CreationScreen\" component={CreationScreen}/>\r\n          <Stack.Screen name=\"HomePage\" component={HomePage}/>\r\n          <Stack.Screen name=\"StudySessionsSettings\" component={StudySessionsSettings}/>\r\n          <Stack.Screen name=\"SessionDetails\" component={SessionDetails}/>\r\n          <Stack.Screen name=\"TimerPage\" component={TimerPage}/>\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </Provider>\r\n  );\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#33b5e5',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  heading: {\r\n    fontFamily: 'OpenSansBold',\r\n    fontSize: 40,\r\n    marginTop: '15%',\r\n    textAlign: \"center\",\r\n    marginBottom: '5%',\r\n    color: \"#ffffff\"\r\n  },\r\n  text: {\r\n    fontFamily: 'ProximaNovaRegular',\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n    color: '#ffffff'\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}