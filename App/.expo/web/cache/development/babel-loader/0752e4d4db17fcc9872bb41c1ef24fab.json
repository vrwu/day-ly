{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\sdhacks\\\\day.ly-Priv\\\\App\\\\screens\\\\timer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Constants from 'expo-constants';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Font from 'expo-font';\nvar INITIAL_WORK_MIN = '25';\nvar INITIAL_BREAK_MIN = '05';\nvar INITIAL_SEC = '00';\nvar WORK_LABEL = 'work';\nvar BREAK_LABEL = 'break';\nvar START_LABEL = 'Start';\nvar STOP_LABEL = 'Stop';\nvar interval = 0;\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      text: '',\n      fontsLoaded: false\n    };\n\n    _this.startStopTimer = function (workSession) {\n      if (_this.isRunning) {\n        return _this.pauseTimer();\n      }\n\n      _this.setState(function (previousState) {\n        return {\n          buttonLabel: STOP_LABEL\n        };\n      });\n\n      if (!_this.secondsRemaining) {\n        _this.secondsRemaining = _this.state.minutes ? _this.state.minutes * 60 : INITIAL_WORK_MIN * 60;\n      }\n\n      _this.isRunning = true;\n\n      _this.setupInteval();\n    };\n\n    _this.setupInteval = function () {\n      clearInterval(interval);\n      interval = setInterval(function () {\n        return _this.onTick();\n      }, 1000);\n    };\n\n    _this.onTick = function () {\n      var minutes = Math.floor(_this.secondsRemaining / 60);\n      var seconds = _this.secondsRemaining - minutes * 60;\n      minutes = _this.normalizeDigits(minutes);\n      seconds = _this.normalizeDigits(seconds);\n\n      _this.setState(function (previousState) {\n        return {\n          minutes: minutes,\n          seconds: seconds\n        };\n      });\n\n      _this.secondsRemaining--;\n\n      if (minutes == 0 && seconds == 0) {\n        if (_this.state.session == WORK_LABEL) {\n          _this.startBreak();\n        } else {\n          _this.startWork();\n        }\n      }\n    };\n\n    _this.pauseTimer = function () {\n      clearInterval(interval);\n      _this.isRunning = false;\n\n      _this.setState(function (previousState) {\n        return {\n          buttonLabel: START_LABEL\n        };\n      });\n    };\n\n    _this.startWork = function () {\n      var that = _assertThisInitialized(_this);\n\n      _this.setState(function (previousState) {\n        return {\n          minutes: that.normalizeDigits(_this.state.workInputValue),\n          seconds: INITIAL_SEC,\n          session: WORK_LABEL,\n          buttonLabel: STOP_LABEL\n        };\n      });\n\n      _this.secondsRemaining = _this.state.workInputValue * 60;\n\n      _this.setupInteval();\n    };\n\n    _this.startBreak = function () {\n      var that = _assertThisInitialized(_this);\n\n      _this.setState(function (previousState) {\n        return {\n          minutes: that.normalizeDigits(_this.state.breakInputValue),\n          seconds: INITIAL_SEC,\n          session: BREAK_LABEL,\n          buttonLabel: STOP_LABEL\n        };\n      });\n\n      _this.secondsRemaining = _this.state.breakInputValue * 60;\n\n      _this.setupInteval();\n    };\n\n    _this.resetTimer = function () {\n      var that = _assertThisInitialized(_this);\n\n      _this.isRunning = false;\n      _this.secondsRemaining = 0;\n      clearInterval(interval);\n\n      _this.setState(function (previousState) {\n        return {\n          session: WORK_LABEL,\n          buttonLabel: START_LABEL,\n          seconds: INITIAL_SEC,\n          minutes: that.normalizeDigits(previousState.workInputValue)\n        };\n      });\n    };\n\n    _this.onWorkInputChange = function (workMin) {\n      var that = _assertThisInitialized(_this);\n\n      _this.setState(function (previousState) {\n        return {\n          workInputValue: workMin,\n          minutes: that.normalizeDigits(workMin)\n        };\n      });\n\n      _this.resetTimer();\n    };\n\n    _this.onBreakInputChange = function (breakMin) {\n      var that = _assertThisInitialized(_this);\n\n      _this.setState(function (previousState) {\n        return {\n          breakInputValue: breakMin,\n          minutes: that.normalizeDigits(_this.state.workInputValue)\n        };\n      });\n\n      _this.resetTimer();\n    };\n\n    _this.normalizeDigits = function (value) {\n      if (value.toString().length < 2) {\n        return '0' + value;\n      }\n\n      return value;\n    };\n\n    _this.state = {\n      minutes: INITIAL_WORK_MIN,\n      seconds: INITIAL_SEC,\n      session: WORK_LABEL,\n      buttonLabel: START_LABEL,\n      workInputValue: INITIAL_WORK_MIN,\n      breakInputValue: INITIAL_BREAK_MIN\n    };\n    _this.secondsRemaining;\n    _this.isRunning = false;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'OpenSansRegular': {\n                  uri: require(\"../assets/fonts/OpenSans-Regular.ttf\")\n                },\n                'ProximaNovaRegular': {\n                  uri: require(\"../assets/fonts/ProximaNova-Regular.otf\")\n                }\n              }));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.fontsLoaded) {\n        return React.createElement(LinearGradient, {\n          colors: ['#4568DC', '#B06AB3'],\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.session,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }\n        }, this.state.session), React.createElement(Text, {\n          style: styles.timer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }\n        }, this.state.minutes, \":\", this.state.seconds)), React.createElement(View, {\n          style: styles.inputContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.inputLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }\n        }, \"Work Mins:\"), React.createElement(TextInput, {\n          defaultValue: \"\" + this.state.workInputValue,\n          maxLength: 3,\n          style: styles.input,\n          keyboardType: \"numeric\",\n          onChangeText: this.onWorkInputChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }\n        })), React.createElement(View, {\n          style: styles.inputContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.inputLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }\n        }, \"Break Mins:\"), React.createElement(TextInput, {\n          defaultValue: \"\" + this.state.breakInputValue,\n          maxLength: 3,\n          style: styles.input,\n          keyboardType: \"numeric\",\n          onChangeText: this.onBreakInputChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }\n        })), React.createElement(View, {\n          style: styles.btnContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.startStopBtn,\n          onPress: function onPress() {\n            return _this2.startStopTimer();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.startStopBtnText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }\n        }, this.state.buttonLabel)), React.createElement(TouchableOpacity, {\n          style: styles.resetBtn,\n          onPress: function onPress() {\n            return _this2.resetTimer();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.resetBtnText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }\n        }, \"Reset\"))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  session: {\n    fontSize: 35,\n    textAlign: 'center',\n    color: 'white',\n    fontFamily: \"OpenSansBold\",\n    marginTop: \"30%\"\n  },\n  timer: {\n    fontSize: 90,\n    color: 'white',\n    padding: 10\n  },\n  startStopBtn: {\n    paddingTop: 10,\n    paddingRight: 30,\n    paddingBottom: 10,\n    paddingLeft: 30,\n    marginRight: 15,\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 10\n  },\n  resetBtn: {\n    paddingTop: 10,\n    paddingRight: 30,\n    paddingBottom: 10,\n    paddingLeft: 30,\n    marginRight: 15,\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 10\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  startStopBtnText: {\n    color: 'white',\n    fontSize: 25,\n    fontFamily: \"ProximaNovaRegular\"\n  },\n  resetBtnText: {\n    color: 'white',\n    fontSize: 25,\n    fontFamily: \"ProximaNovaRegular\"\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    height: 50\n  },\n  inputLabel: {\n    fontSize: 18,\n    color: 'white',\n    paddingRight: 10,\n    paddingTop: 5,\n    fontWeight: 'bold',\n    fontFamily: \"ProximaNovaRegular\"\n  },\n  input: {\n    color: 'white',\n    fontSize: 30,\n    padding: 5,\n    textAlign: 'center',\n    marginLeft: 5,\n    maxWidth: 60,\n    minWidth: 40,\n    marginBottom: 8,\n    fontFamily: \"ProximaNovaBold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/sdhacks/day.ly-Priv/App/screens/timer.js"],"names":["React","Constants","LinearGradient","Font","INITIAL_WORK_MIN","INITIAL_BREAK_MIN","INITIAL_SEC","WORK_LABEL","BREAK_LABEL","START_LABEL","STOP_LABEL","interval","App","props","state","text","fontsLoaded","startStopTimer","workSession","isRunning","pauseTimer","setState","previousState","buttonLabel","secondsRemaining","minutes","setupInteval","clearInterval","setInterval","onTick","Math","floor","seconds","normalizeDigits","session","startBreak","startWork","that","workInputValue","breakInputValue","resetTimer","onWorkInputChange","workMin","onBreakInputChange","breakMin","value","toString","length","loadAsync","uri","require","loadFonts","styles","container","timer","inputContainer","inputLabel","input","btnContainer","startStopBtn","startStopBtnText","resetBtn","resetBtnText","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","textAlign","color","fontFamily","marginTop","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","marginRight","borderWidth","borderColor","borderRadius","flexDirection","marginBottom","height","fontWeight","marginLeft","maxWidth","minWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TextInput,\r\n} from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Font from 'expo-font';\r\n\r\n\r\nconst INITIAL_WORK_MIN = '25';\r\nconst INITIAL_BREAK_MIN = '05';\r\nconst INITIAL_SEC = '00';\r\nconst WORK_LABEL = 'work';\r\nconst BREAK_LABEL = 'break';\r\nconst START_LABEL = 'Start';\r\nconst STOP_LABEL = 'Stop';\r\n\r\nlet interval = 0;\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    state = {\r\n        text: '',\r\n        fontsLoaded: false,\r\n    }\r\n\r\n    async loadFonts() {\r\n        await Font.loadAsync({\r\n            'OpenSansRegular': {\r\n            uri: require('../assets/fonts/OpenSans-Regular.ttf'),\r\n            },\r\n            'ProximaNovaRegular': {\r\n                uri: require('../assets/fonts/ProximaNova-Regular.otf'),\r\n                },\r\n    });\r\n    this.setState({ fontsLoaded: true });\r\n}\r\n    // componentDidMount() {\r\n    //     Font.loadAsync({\r\n    //       'open-sans-bold': require('../assets/fonts/OpenSans-Bold.ttf'),\r\n    //     });\r\n    //     this.setState({ fontsLoaded: true });\r\n    //   }\r\n\r\n      componentDidMount() {\r\n          this.loadFonts();\r\n      }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      minutes: INITIAL_WORK_MIN,\r\n      seconds: INITIAL_SEC,\r\n      session: WORK_LABEL,\r\n      buttonLabel: START_LABEL,\r\n      workInputValue: INITIAL_WORK_MIN,\r\n      breakInputValue: INITIAL_BREAK_MIN,\r\n    };\r\n\r\n    this.secondsRemaining;\r\n    this.isRunning = false;\r\n  }\r\n\r\n  startStopTimer = workSession => {\r\n    // Stop/pause timer\r\n    if (this.isRunning) {\r\n      return this.pauseTimer();\r\n    }\r\n\r\n    // Start/Continue timer\r\n    this.setState(previousState => ({\r\n      buttonLabel: STOP_LABEL,\r\n    }));\r\n\r\n    if (!this.secondsRemaining) {\r\n      this.secondsRemaining = this.state.minutes\r\n        ? this.state.minutes * 60\r\n        : INITIAL_WORK_MIN * 60;\r\n    }\r\n\r\n    this.isRunning = true;\r\n\r\n    this.setupInteval();\r\n  };\r\n\r\n  setupInteval = () => {\r\n    clearInterval(interval);\r\n\r\n    interval = setInterval(() => this.onTick(), 1000);\r\n  };\r\n\r\n  onTick = () => {\r\n    let minutes = Math.floor(this.secondsRemaining / 60);\r\n    let seconds = this.secondsRemaining - minutes * 60;\r\n\r\n    minutes = this.normalizeDigits(minutes);\r\n    seconds = this.normalizeDigits(seconds);\r\n\r\n    this.setState(previousState => ({\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    }));\r\n\r\n    this.secondsRemaining--;\r\n\r\n    if (minutes == 0 && seconds == 0) {\r\n      \r\n      if (this.state.session == WORK_LABEL) {\r\n        this.startBreak();\r\n      } else {\r\n        this.startWork();\r\n      }\r\n    }\r\n  };\r\n\r\n  pauseTimer = () => {\r\n    clearInterval(interval);\r\n\r\n    this.isRunning = false;\r\n\r\n    this.setState(previousState => ({\r\n      buttonLabel: START_LABEL,\r\n    }));\r\n  };\r\n\r\n  startWork = () => {\r\n    const that = this;\r\n\r\n    this.setState(previousState => ({\r\n      minutes: that.normalizeDigits(this.state.workInputValue),\r\n      seconds: INITIAL_SEC,\r\n      session: WORK_LABEL,\r\n      buttonLabel: STOP_LABEL,\r\n    }));\r\n\r\n    this.secondsRemaining = this.state.workInputValue * 60;\r\n\r\n    this.setupInteval();\r\n  };\r\n\r\n  startBreak = () => {\r\n    const that = this;\r\n\r\n    this.setState(previousState => ({\r\n      minutes: that.normalizeDigits(this.state.breakInputValue),\r\n      seconds: INITIAL_SEC,\r\n      session: BREAK_LABEL,\r\n      buttonLabel: STOP_LABEL,\r\n    }));\r\n\r\n    this.secondsRemaining = this.state.breakInputValue * 60;\r\n\r\n    this.setupInteval();\r\n  };\r\n\r\n  resetTimer = () => {\r\n    const that = this;\r\n\r\n    this.isRunning = false;\r\n    this.secondsRemaining = 0;\r\n\r\n    clearInterval(interval);\r\n\r\n    this.setState(previousState => ({\r\n      session: WORK_LABEL,\r\n      buttonLabel: START_LABEL,\r\n      seconds: INITIAL_SEC,\r\n      minutes: that.normalizeDigits(previousState.workInputValue),\r\n    }));\r\n  };\r\n\r\n  onWorkInputChange = workMin => {\r\n    const that = this;\r\n\r\n    this.setState(previousState => ({\r\n      workInputValue: workMin,\r\n      minutes: that.normalizeDigits(workMin),\r\n    }));\r\n\r\n    this.resetTimer();\r\n  };\r\n\r\n  onBreakInputChange = breakMin => {\r\n    const that = this;\r\n\r\n    this.setState(previousState => ({\r\n      breakInputValue: breakMin,\r\n      minutes: that.normalizeDigits(this.state.workInputValue),\r\n    }));\r\n\r\n    this.resetTimer();\r\n  };\r\n\r\n  normalizeDigits = value => {\r\n    if (value.toString().length < 2) {\r\n      return '0' + value;\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  \r\n  render() {\r\n    if(this.state.fontsLoaded) {\r\n    return (\r\n        <LinearGradient colors={['#4568DC', '#B06AB3']} style={styles.container}>\r\n        <View>\r\n          <Text style={styles.session}>{this.state.session}</Text>\r\n          <Text style={styles.timer}>\r\n            {this.state.minutes}:{this.state.seconds}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <Text style={styles.inputLabel}>Work Mins:</Text>\r\n          <TextInput\r\n            defaultValue={`${this.state.workInputValue}`}\r\n            maxLength={3}\r\n            style={styles.input}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={this.onWorkInputChange}\r\n          />\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <Text style={styles.inputLabel}>Break Mins:</Text>\r\n          <TextInput\r\n            defaultValue={`${this.state.breakInputValue}`}\r\n            maxLength={3}\r\n            style={styles.input}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={this.onBreakInputChange}\r\n          />\r\n        </View>\r\n        <View style={styles.btnContainer}>\r\n          <TouchableOpacity\r\n            style={styles.startStopBtn}\r\n            onPress={() => this.startStopTimer()}>\r\n            <Text style={styles.startStopBtnText}>\r\n              {this.state.buttonLabel}\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.resetBtn}\r\n            onPress={() => this.resetTimer()}>\r\n            <Text style={styles.resetBtnText}>Reset</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </LinearGradient>\r\n    );\r\n  }\r\n  else {\r\n    return null;\r\n}\r\n}\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n\r\n  },\r\n  session: {\r\n    fontSize: 35,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    fontFamily: \"OpenSansBold\",\r\n    marginTop: \"30%\"\r\n  },\r\n  timer: {\r\n    fontSize: 90,\r\n    color: 'white',\r\n    padding: 10,\r\n  },\r\n  startStopBtn: {\r\n    paddingTop: 10,\r\n    paddingRight: 30,\r\n    paddingBottom: 10,\r\n    paddingLeft: 30,\r\n    marginRight: 15,\r\n    borderWidth: 1,\r\n    borderColor: 'white',\r\n    borderRadius: 10,\r\n  },\r\n  resetBtn: {\r\n    paddingTop: 10,\r\n    paddingRight: 30,\r\n    paddingBottom: 10,\r\n    paddingLeft: 30,\r\n    marginRight: 15,\r\n    borderWidth: 1,\r\n    borderColor: 'white',\r\n    borderRadius: 10,\r\n  },\r\n  btnContainer: {\r\n    flexDirection: 'row',\r\n    marginTop: 20,\r\n  },\r\n  startStopBtnText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: \"ProximaNovaRegular\"\r\n  },\r\n  resetBtnText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: \"ProximaNovaRegular\"\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n    height: 50\r\n  },\r\n  inputLabel: {\r\n    fontSize: 18,\r\n    color: 'white',\r\n    paddingRight: 10,\r\n    paddingTop: 5,\r\n    fontWeight: 'bold',\r\n    fontFamily: \"ProximaNovaRegular\"\r\n  },\r\n  input: {\r\n    color: 'white',\r\n    fontSize: 30,\r\n    padding: 5,\r\n    textAlign: 'center',\r\n    marginLeft: 5,\r\n    maxWidth: 60,\r\n    minWidth: 40,\r\n    marginBottom: 8,\r\n    fontFamily: \"ProximaNovaBold\"\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}